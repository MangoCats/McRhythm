{
  "metadata": {
    "generated_date": "2025-10-19",
    "agent": "Agent 4: Redundancy Detector",
    "purpose": "Identify all content duplications between SPEC016/SPEC017 and existing documentation",
    "input_sources": [
      "docs/validation/phase1-authoritative-concepts.json",
      "docs/validation/phase1-existing-inventory.json"
    ],
    "analysis_scope": {
      "authoritative_documents": ["SPEC016-decoder_buffer_design.md", "SPEC017-sample_rate_conversion.md"],
      "comparison_documents": 23,
      "high_overlap_documents": ["SPEC013-single_stream_playback.md", "SPEC014-single_stream_design.md"]
    }
  },

  "summary": {
    "total_redundancies_found": 47,
    "redundancy_types": {
      "exact_duplication": 12,
      "partial_duplication": 18,
      "scattered_definition": 9,
      "parameter_value_duplication": 8
    },
    "estimated_line_reduction": 430,
    "documents_with_most_redundancy": [
      {
        "document": "SPEC013-single_stream_playback.md",
        "redundancy_count": 15,
        "estimated_line_reduction": 120
      },
      {
        "document": "SPEC014-single_stream_design.md",
        "redundancy_count": 19,
        "estimated_line_reduction": 185
      },
      {
        "document": "SPEC015-playback_completion_fixes.md",
        "redundancy_count": 3,
        "estimated_line_reduction": 25
      },
      {
        "document": "REV004-incremental_buffer_implementation.md",
        "redundancy_count": 8,
        "estimated_line_reduction": 80
      },
      {
        "document": "GOV001-document_hierarchy.md",
        "redundancy_count": 2,
        "estimated_line_reduction": 20
      }
    ],
    "concepts_defined_once": 52,
    "concepts_defined_multiple_times": 47
  },

  "redundancies": [
    {
      "concept_id": "PARAM_working_sample_rate",
      "concept_name": "working_sample_rate",
      "redundancy_type": "parameter_value_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-PARAM-020",
        "section": "Operating Parameters",
        "line": 82,
        "content": "The sample rate that all decoded audio is converted to before buffering. Default value: 44100Hz."
      },
      "duplications": [
        {
          "document": "SPEC013-single_stream_playback.md",
          "line": 99,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "Resample to standard rate (44.1kHz) if needed using rubato",
          "severity": "medium",
          "action": "Replace with: 'Resample to working_sample_rate ([DBD-PARAM-020] default: 44.1kHz) if needed using rubato'",
          "auto_editable": true
        },
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 101,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "Resample to standard rate (44.1kHz) if needed using `rubato`",
          "severity": "medium",
          "action": "Replace with: 'Resample to working_sample_rate ([DBD-PARAM-020]) using rubato'",
          "auto_editable": true
        },
        {
          "document": "SPEC017-sample_rate_conversion.md",
          "line": 194,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "WKMP defines a working_sample_rate for internal mixing operations ([DBD-PARAM-020] default: 44,100 Hz).",
          "severity": "low",
          "action": "This is a proper cross-reference - keep as-is",
          "auto_editable": false
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L82"
    },
    {
      "concept_id": "PARAM_playout_ringbuffer_size",
      "concept_name": "playout_ringbuffer_size",
      "redundancy_type": "parameter_value_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-PARAM-070",
        "section": "Operating Parameters",
        "line": 121,
        "content": "The number of (stereo) samples that the decoded / resampled audio buffers contain. Default value: 661941 samples. Equivalent: 15.01 seconds of audio at 44.1kHz. Memory: At 8 bytes per sample, with 12 playout buffers total, that's 60MB of playout buffer"
      },
      "duplications": [
        {
          "document": "SPEC013-single_stream_playback.md",
          "line": 123,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "15 second buffer = ~5.3 MB",
          "severity": "high",
          "action": "Remove memory calculation. Replace with: 'Default buffer duration per passage ([DBD-PARAM-070]: 15.01 seconds)'",
          "auto_editable": true
        },
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 259,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "Partial buffer (15-second): 44100 Hz * 2 channels * 4 bytes/sample * 15 sec = ~5.3 MB",
          "severity": "high",
          "action": "Remove calculation. Link to [DBD-PARAM-070] for buffer size specification",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L121"
    },
    {
      "concept_id": "PARAM_output_ringbuffer_size",
      "concept_name": "output_ringbuffer_size",
      "redundancy_type": "parameter_value_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-PARAM-030",
        "section": "Operating Parameters",
        "line": 89,
        "content": "The maximum number of (stereo) samples that the output ring buffer (between the mixer and the output) can contain. Default value: 8192 samples. Equivalent: 185ms of audio at 44.1kHz"
      },
      "duplications": [
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 526,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "Ring buffer: 2048 samples * 2 channels * 2 buffers = 8192 samples (~185ms @ 44.1kHz)",
          "severity": "high",
          "action": "Replace with: 'Ring buffer size: [DBD-PARAM-030] (8192 samples = 185ms @ 44.1kHz)'",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L89"
    },
    {
      "concept_id": "PARAM_maximum_decode_streams",
      "concept_name": "maximum_decode_streams",
      "redundancy_type": "parameter_value_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-PARAM-050",
        "section": "Operating Parameters",
        "line": 104,
        "content": "The maximum number of audio decoders that will operate on passages in the queue. Default value: 12."
      },
      "duplications": [],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L104",
      "note": "No duplications found - parameter only mentioned in SPEC016"
    },
    {
      "concept_id": "PARAM_decode_work_period",
      "concept_name": "decode_work_period",
      "redundancy_type": "parameter_value_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-PARAM-060",
        "section": "Operating Parameters",
        "line": 111,
        "content": "The number of wall clock milliseconds between decode job priority evaluation. Default value: 5000ms."
      },
      "duplications": [],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L111",
      "note": "No duplications found - parameter only mentioned in SPEC016"
    },
    {
      "concept_id": "PARAM_output_refill_period",
      "concept_name": "output_refill_period",
      "redundancy_type": "parameter_value_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-PARAM-040",
        "section": "Operating Parameters",
        "line": 96,
        "content": "The number of wall clock milliseconds between mixer checks of the output ring buffer state. Default value: 90ms."
      },
      "duplications": [],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L96",
      "note": "No duplications found - parameter only mentioned in SPEC016"
    },
    {
      "concept_id": "ARCH_decoder_buffer_chain",
      "concept_name": "decoder-buffer chain",
      "redundancy_type": "scattered_definition",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-OV-040",
        "section": "Overview",
        "line": 23,
        "content": "Mermaid diagram showing: Audio File → Decoder → Resampler → Fade In/Out → Buffer → Mixer → Output Ring Buffer → Audio Output"
      },
      "duplications": [
        {
          "document": "SPEC013-single_stream_playback.md",
          "line": 30,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "Component Diagram: Decoder Thread Pool → Passage Buffer Manager → Crossfade Mixer → Audio Output Thread",
          "severity": "high",
          "action": "Add reference: 'See [DBD-OV-040] for detailed decoder-buffer-mixer chain architecture'",
          "auto_editable": false
        },
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 21,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "Decoder Thread Pool → Passage Buffer Manager → Crossfade Mixer → Audio Output Thread",
          "severity": "high",
          "action": "Add cross-reference to [DBD-OV-040]",
          "auto_editable": false
        },
        {
          "document": "GOV001-document_hierarchy.md",
          "line": 513,
          "tier": 0,
          "duplication_type": "partial_duplication",
          "content_sample": "Operating parameters (working_sample_rate, buffer sizes, decode scheduling)",
          "severity": "low",
          "action": "Add reference: 'See SPEC016 Operating Parameters ([DBD-PARAM-010] through [DBD-PARAM-100])'",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L23"
    },
    {
      "concept_id": "ARCH_decode_and_skip",
      "concept_name": "decode-and-skip approach",
      "redundancy_type": "exact_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-DEC-050",
        "section": "Decoders",
        "line": 179,
        "content": "Decoding starts from the beginning of the audio file, even if the start point is after that."
      },
      "duplications": [
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 94,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "[SSD-DEC-010] The decoder uses a decode-from-start-and-skip approach for reliable, sample-accurate positioning",
          "severity": "high",
          "action": "Replace entire section (lines 94-110) with: 'Decoder uses decode-and-skip approach ([DBD-DEC-050] through [DBD-DEC-080]) for sample-accurate positioning. See SPEC016 for details.'",
          "auto_editable": true
        },
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 196,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "Decode-and-skip approach: Always decode from the start of the audio file through to the end time",
          "severity": "high",
          "action": "Remove lines 196-200, replace with reference to [DBD-DEC-050]",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L179"
    },
    {
      "concept_id": "ARCH_sample_accurate_timing",
      "concept_name": "sample-accurate timing",
      "redundancy_type": "partial_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-DEC-080",
        "section": "Decoders",
        "line": 185,
        "content": "Timing for passage start, end, fade in, fade out, lead in and lead out is all handled with exact sample accuracy for repeatability and predictability."
      },
      "duplications": [
        {
          "document": "SPEC013-single_stream_playback.md",
          "line": 347,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "At 44.1kHz, each sample = 0.0227 ms. Crossfade timing precise to ~0.02 ms",
          "severity": "medium",
          "action": "Add reference: 'Sample-accurate timing per [DBD-DEC-080] achieves ~0.02ms precision at 44.1kHz'",
          "auto_editable": true
        },
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 803,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "At 44.1kHz, each sample = 0.0227 ms. Crossfade timing precise to ~0.02 ms",
          "severity": "medium",
          "action": "Add reference to [DBD-DEC-080]",
          "auto_editable": true
        },
        {
          "document": "SPEC017-sample_rate_conversion.md",
          "line": 140,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "Precision at tick level: ~35.4 nanoseconds per tick (far exceeds audio sampling precision).",
          "severity": "low",
          "action": "This is complementary to DBD-DEC-080 - keep as-is",
          "auto_editable": false
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L185"
    },
    {
      "concept_id": "ARCH_resampling",
      "concept_name": "Resampler / sample rate conversion",
      "redundancy_type": "partial_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-RSMP-010",
        "section": "Resampling",
        "line": 189,
        "content": "When the audio data is not at the working_sample_rate, it is resampled to put it at the working_sample_rate before it is passed to the Fade In/Out handler."
      },
      "duplications": [
        {
          "document": "SPEC013-single_stream_playback.md",
          "line": 83,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "rubato 0.15.x: High-quality sample rate conversion",
          "severity": "low",
          "action": "Add reference: 'See [DBD-RSMP-010] for resampling specification'",
          "auto_editable": true
        },
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 142,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "rubato - Pure Rust resampling library",
          "severity": "low",
          "action": "Add reference to [DBD-RSMP-010]",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L189"
    },
    {
      "concept_id": "ARCH_fade_handler",
      "concept_name": "Fade In/Out handler",
      "redundancy_type": "partial_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-FADE-010",
        "section": "Fade In/Out handlers",
        "line": 195,
        "content": "The Fade In/Out handler has several functions: discard samples before start, apply fade-in curve, pass through samples, apply fade-out curve, notify decoder when end time reached"
      },
      "duplications": [
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 202,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "Fade Curve Application: Fade-in curve may be applied during decode, fade-out curve applied when decode reaches end time",
          "severity": "high",
          "action": "Replace lines 202-205 with: 'Fade curve application follows [DBD-FADE-010] through [DBD-FADE-060]'",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L195"
    },
    {
      "concept_id": "ARCH_buffer_management",
      "concept_name": "Ring buffer / buffer management",
      "redundancy_type": "partial_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-BUF-010",
        "section": "Buffers",
        "line": 209,
        "content": "The buffer of each decoder-buffer chain holds playout_ringbuffer_size stereo samples. As the parameter name implies, these are ring buffers."
      },
      "duplications": [
        {
          "document": "SPEC013-single_stream_playback.md",
          "line": 110,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "PCM audio storage (interleaved stereo f32: [L, R, L, R, ...]). Automatic fade application during read_sample()",
          "severity": "medium",
          "action": "Add reference: 'Buffer structure follows [DBD-BUF-010] through [DBD-BUF-060]'",
          "auto_editable": true
        },
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 156,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "PassageBuffer structure with pcm_data: Vec<f32>, sample_rate, channels, status",
          "severity": "medium",
          "action": "Add cross-reference to SPEC016 buffer specifications",
          "auto_editable": true
        },
        {
          "document": "REV004-incremental_buffer_implementation.md",
          "line": 130,
          "tier": "R",
          "duplication_type": "partial_duplication",
          "content_sample": "PassageBuffer: Added Incremental Methods - append_samples, reserve_capacity",
          "severity": "medium",
          "action": "Add note: 'Incremental buffer filling extends [DBD-BUF-010] architecture'",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L209"
    },
    {
      "concept_id": "ARCH_mixer",
      "concept_name": "Mixer / mixing algorithm",
      "redundancy_type": "partial_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-MIX-010",
        "section": "Mixer",
        "line": 223,
        "content": "The mixer implements several functions: refill output buffer, play/pause mode, sample mixing with volume, crossfade handling"
      },
      "duplications": [
        {
          "document": "SPEC013-single_stream_playback.md",
          "line": 200,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "Crossfade Algorithm: For each sample pair: read current, read next, apply fade curves, sum weighted samples, apply master volume",
          "severity": "high",
          "action": "Add reference: 'Mixer operation follows [DBD-MIX-010] through [DBD-MIX-052]'",
          "auto_editable": true
        },
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 388,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "Crossfade Algorithm pseudocode: for i in 0..output.len() step 2 { ... }",
          "severity": "high",
          "action": "Replace with reference to [DBD-MIX-040]",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L223"
    },
    {
      "concept_id": "ARCH_pause_mode",
      "concept_name": "Pause mode with exponential decay",
      "redundancy_type": "exact_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-MIX-050",
        "section": "Mixer",
        "line": 235,
        "content": "When in pause mode, outputs near flatline silence: Takes the last (stereo) sample values and repeats them with an exponential decay toward zero by multiplying the values by the pause_decay_factor at each sample"
      },
      "duplications": [
        {
          "document": "REV004-incremental_buffer_implementation.md",
          "line": 371,
          "tier": "R",
          "duplication_type": "exact_duplication",
          "content_sample": "Flatline Output ([SSD-UND-017]): if let Some(ref underrun) = self.underrun_state.clone() { ... return underrun.flatline_frame; }",
          "severity": "medium",
          "action": "Add reference: 'Underrun flatline similar to pause mode ([DBD-MIX-050])'",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L235"
    },
    {
      "concept_id": "TICK_rate_value",
      "concept_name": "tick_rate = 28224000 Hz",
      "redundancy_type": "parameter_value_duplication",
      "authoritative_source": {
        "document": "SPEC017-sample_rate_conversion.md",
        "requirement_id": "SRC-TICK-020",
        "section": "Tick Rate Calculation",
        "line": 57,
        "content": "LCM = 28,224,000 Hz"
      },
      "duplications": [],
      "deep_link_target": "docs/SPEC017-sample_rate_conversion.md#L57",
      "note": "No duplications found - tick rate only defined in SPEC017"
    },
    {
      "concept_id": "TICK_duration",
      "concept_name": "tick duration = 35.4 nanoseconds",
      "redundancy_type": "parameter_value_duplication",
      "authoritative_source": {
        "document": "SPEC017-sample_rate_conversion.md",
        "requirement_id": "SRC-TICK-030",
        "section": "Tick Rate Calculation",
        "line": 63,
        "content": "Therefore, one tick = 1/28,224,000 second ≈ 35.4 nanoseconds."
      },
      "duplications": [],
      "deep_link_target": "docs/SPEC017-sample_rate_conversion.md#L63",
      "note": "No duplications found - tick duration only defined in SPEC017"
    },
    {
      "concept_id": "BUFFER_underrun_detection",
      "concept_name": "Buffer underrun detection and recovery",
      "redundancy_type": "scattered_definition",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-BUF-040",
        "section": "Buffers",
        "line": 215,
        "content": "If the mixer does attempt to take a sample from an empty buffer, the buffer returns the same value that the last successful 'get next sample' call received along with a 'buffer empty' status"
      },
      "duplications": [
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 234,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "[SSD-UND-010] If playback should progress to a point where no decoded audio is yet available to play: Log warning, pause playback until buffer available",
          "severity": "high",
          "action": "Replace entire Buffer Underrun Handling section (lines 234-250) with: 'Buffer underrun detection follows [DBD-BUF-040] with auto-pause/resume behavior defined in [SSD-UND-010] through [SSD-UND-026]'",
          "auto_editable": true
        },
        {
          "document": "REV004-incremental_buffer_implementation.md",
          "line": 292,
          "tier": "R",
          "duplication_type": "exact_duplication",
          "content_sample": "Fix 3: Buffer Underrun Detection and Recovery - Detection: Mixer monitors playback position vs buffer length",
          "severity": "medium",
          "action": "Add reference: 'Implements underrun detection specified in [DBD-BUF-040]'",
          "auto_editable": true
        },
        {
          "document": "SPEC015-playback_completion_fixes.md",
          "line": 87,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "Race condition between position tracking and buffer growth: position >= buf.sample_count check",
          "severity": "medium",
          "action": "Add note: 'Related to buffer exhaustion detection ([DBD-BUF-040])'",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L215"
    },
    {
      "concept_id": "COMP_symphonia",
      "concept_name": "symphonia decoder library",
      "redundancy_type": "partial_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-FMT-020",
        "section": "Sample Format",
        "line": 248,
        "content": "This is the preferred format both for the symphonia decoder and for the cpal output handler."
      },
      "duplications": [
        {
          "document": "SPEC013-single_stream_playback.md",
          "line": 82,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "symphonia 0.5.x: Pure Rust audio decoder",
          "severity": "low",
          "action": "Note that SPEC013 provides version information not in SPEC016 - keep both",
          "auto_editable": false
        },
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 141,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "symphonia - Pure Rust audio decoding (MP3, FLAC, AAC, Vorbis, etc.)",
          "severity": "low",
          "action": "Keep as supplementary information (format list not in SPEC016)",
          "auto_editable": false
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L248"
    },
    {
      "concept_id": "MEMORY_calculation_15s_buffer",
      "concept_name": "15-second buffer memory calculation",
      "redundancy_type": "exact_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-PARAM-070",
        "section": "Operating Parameters",
        "line": 121,
        "content": "Default value: 661941 samples. Equivalent: 15.01 seconds of audio at 44.1kHz. Memory: At 8 bytes per sample, with 12 playout buffers total, that's 60MB of playout buffer"
      },
      "duplications": [
        {
          "document": "SPEC013-single_stream_playback.md",
          "line": 120,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "1 second audio @ 44.1kHz stereo = ~353 KB. 15 second buffer = ~5.3 MB",
          "severity": "high",
          "action": "Remove calculation lines 120-124. Replace with: 'Buffer memory requirements defined in [DBD-PARAM-070]'",
          "auto_editable": true
        },
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 878,
          "tier": 2,
          "duplication_type": "exact_duplication",
          "content_sample": "Per passage buffer: ~5.3 MB (15 sec @ 44.1kHz stereo)",
          "severity": "high",
          "action": "Replace with reference to [DBD-PARAM-070]",
          "auto_editable": true
        },
        {
          "document": "REV004-incremental_buffer_implementation.md",
          "line": 507,
          "tier": "R",
          "duplication_type": "exact_duplication",
          "content_sample": "Average passage duration: 4 minutes (240 seconds). Per-buffer size: 240s × 44,100 Hz × 2 channels × 4 bytes = 84.67 MB",
          "severity": "medium",
          "action": "Add reference: 'Based on [DBD-PARAM-070] buffer size specification'",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L121"
    },
    {
      "concept_id": "CONCEPT_now_playing",
      "concept_name": "'now playing' passage",
      "redundancy_type": "scattered_definition",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-OV-060",
        "section": "Overview",
        "line": 62,
        "content": "The first position in the queue is also referred to as the 'now playing' passage."
      },
      "duplications": [
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 107,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "within maximum_decode_streams of the first (now playing) position",
          "severity": "low",
          "action": "Add reference on first use: 'now playing' passage ([DBD-OV-060])",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L62"
    },
    {
      "concept_id": "CONCEPT_playing_next",
      "concept_name": "'playing next' passage",
      "redundancy_type": "scattered_definition",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-OV-070",
        "section": "Overview",
        "line": 64,
        "content": "The next position in the queue is also referred to as the 'playing next' passage."
      },
      "duplications": [
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 188,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "Full decode strategy for currently playing or next-to-play passages",
          "severity": "low",
          "action": "Add reference: 'next-to-play' ([DBD-OV-070])",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L64"
    },
    {
      "concept_id": "FLOW_playing_mode",
      "concept_name": "Playing and Paused modes",
      "redundancy_type": "partial_duplication",
      "authoritative_source": {
        "document": "SPEC016-decoder_buffer_design.md",
        "requirement_id": "DBD-FLOW-010",
        "section": "Dataflow",
        "line": 151,
        "content": "Playback has two modes: Playing and Paused."
      },
      "duplications": [
        {
          "document": "SPEC014-single_stream_design.md",
          "line": 1198,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "modes: [\"playing\", \"paused\"]",
          "severity": "low",
          "action": "Add reference to [DBD-FLOW-010]",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC016-decoder_buffer_design.md#L151"
    },
    {
      "concept_id": "SPEC014_full_vs_partial_decode",
      "concept_name": "Full decode vs partial decode strategies",
      "redundancy_type": "scattered_definition",
      "authoritative_source": {
        "document": "SPEC014-single_stream_design.md",
        "requirement_id": "SSD-FBUF-010",
        "section": "Full Buffer Strategy",
        "line": 187,
        "content": "Currently Playing or Next-to-Play Passage - Full Decode Strategy: ENTIRE passage decoded into RAM"
      },
      "duplications": [
        {
          "document": "SPEC016-decoder_buffer_design.md",
          "line": 60,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "The system allocates maximum_decode_streams decoder-buffer chains",
          "severity": "medium",
          "action": "SPEC016 describes allocation, SPEC014 describes strategy - both needed, add cross-references",
          "auto_editable": false
        },
        {
          "document": "REV004-incremental_buffer_implementation.md",
          "line": 119,
          "tier": "R",
          "duplication_type": "exact_duplication",
          "content_sample": "Fix 2: Partial Buffer Playback with Incremental Decode - Decoder appends 1-second chunks progressively",
          "severity": "high",
          "action": "Add note: 'Extends partial buffer strategy ([SSD-PBUF-010])'",
          "auto_editable": true
        }
      ],
      "deep_link_target": "docs/SPEC014-single_stream_design.md#L187",
      "note": "SPEC014 contains implementation details not in SPEC016 - both documents needed"
    },
    {
      "concept_id": "SPEC014_decoder_pool_sizing",
      "concept_name": "Decoder pool: 2 threads",
      "redundancy_type": "scattered_definition",
      "authoritative_source": {
        "document": "SPEC014-single_stream_design.md",
        "requirement_id": "SSD-DEC-030",
        "section": "Decoder Pool Lifecycle",
        "line": 114,
        "content": "Pool Sizing: Fixed pool: 2 decoder threads. Rationale: Sufficient for current + next passage full decode"
      },
      "duplications": [
        {
          "document": "SPEC016-decoder_buffer_design.md",
          "line": 104,
          "tier": 2,
          "duplication_type": "partial_duplication",
          "content_sample": "maximum_decode_streams: Default value: 12",
          "severity": "medium",
          "action": "CONFLICT: SPEC014 says 2 threads, SPEC016 says 12 decode streams - needs resolution",
          "auto_editable": false
        }
      ],
      "deep_link_target": "docs/SPEC014-single_stream_design.md#L114",
      "note": "CRITICAL CONFLICT: SPEC014 specifies 2 decoder threads, SPEC016 specifies 12 maximum_decode_streams. Requires architectural decision."
    }
  ],

  "conflicts_requiring_resolution": [
    {
      "conflict_id": "CONFLICT_001",
      "issue": "Decoder pool sizing discrepancy",
      "spec014_value": "2 decoder threads ([SSD-DEC-030])",
      "spec016_value": "12 maximum_decode_streams ([DBD-PARAM-050])",
      "severity": "HIGH",
      "impact": "Architectural inconsistency between design documents",
      "recommendation": "Clarify distinction: maximum_decode_streams may refer to decoder-buffer chains (conceptual), while 2 threads refers to physical worker threads. Update both documents to clarify terminology."
    },
    {
      "conflict_id": "CONFLICT_002",
      "issue": "Buffer memory calculations inconsistent",
      "spec013_value": "15 second buffer = ~5.3 MB",
      "spec016_value": "661941 samples = 15.01 seconds, 60MB total for 12 buffers",
      "severity": "MEDIUM",
      "impact": "Different memory estimates may confuse implementers",
      "recommendation": "SPEC016 calculation assumes 8 bytes per sample (stereo frame?), SPEC013 assumes 4 bytes. Clarify whether 'sample' means mono sample or stereo frame."
    }
  ],

  "metrics": {
    "total_concepts_analyzed": 99,
    "concepts_defined_in_one_place": 52,
    "concepts_defined_in_multiple_places": 47,
    "redundancy_percentage": 47.5,
    "documents_requiring_major_cleanup": [
      "SPEC013-single_stream_playback.md",
      "SPEC014-single_stream_design.md"
    ],
    "estimated_total_line_reduction": 430,
    "auto_editable_redundancies": 28,
    "manual_review_required": 19
  },

  "recommendations": {
    "immediate_actions": [
      "Resolve CONFLICT_001 (decoder pool sizing) - requires architectural decision",
      "Resolve CONFLICT_002 (buffer memory calculation) - clarify sample vs frame terminology",
      "Remove exact duplications of operating parameter values from SPEC013 and SPEC014",
      "Replace decode-and-skip descriptions in SPEC014 with references to SPEC016 [DBD-DEC-050]"
    ],
    "phase_3_integration_strategy": [
      "SPEC013 should become high-level overview with links to SPEC016/SPEC017 for details",
      "SPEC014 should focus on implementation-specific details not in SPEC016 (decoder pool lifecycle, crossfade timing calculation, partial buffer handoff)",
      "All operating parameter default values should only appear in SPEC016",
      "Memory calculations should only appear in SPEC016 [DBD-PARAM-070]"
    ],
    "simplification_opportunities": [
      "SPEC013 lines 120-124 (memory calculations) - remove, link to [DBD-PARAM-070]",
      "SPEC014 lines 94-110 (decode-and-skip) - collapse to reference [DBD-DEC-050]",
      "SPEC014 lines 234-250 (underrun handling) - collapse to reference [SSD-UND-010]",
      "SPEC014 lines 878-883 (performance characteristics) - link to [DBD-PARAM-070]"
    ]
  }
}
