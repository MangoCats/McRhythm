{
  "SPEC001-architecture.md": {
    "document": "SPEC001-architecture.md",
    "tier": 2,
    "total_edits": 10,
    "priority_breakdown": {
      "HIGH": 3,
      "MEDIUM": 5,
      "LOW": 2
    },
    "estimated_line_reduction": 0,
    "summary": "Add deep links from architecture overview to SPEC016 detailed design.",
    "edits": [
      {
        "edit_id": "EDIT-SPEC001-001",
        "priority": "HIGH",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "Audio Player Responsibilities",
          "lines": "120"
        },
        "current_content": "[ARCH-PC-010] Audio Player responsibilities: decoding, buffering, crossfading, output",
        "new_content": "[ARCH-PC-010] Audio Player responsibilities: decoding, buffering, crossfading, output\n\nSee [SPEC016 Decoder Buffer Design](SPEC016-decoder_buffer_design.md) for complete audio player architecture including decoder-buffer chains, mixer, and output system.",
        "rationale": "SPEC001 overview should deep-link to SPEC016 detailed design",
        "status": "READY",
        "references_to_spec016_17": [
          "DBD-OV-010"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation-only change"
      },
      {
        "edit_id": "EDIT-SPEC001-002",
        "priority": "LOW",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "Audio Player Responsibilities - Sample-accurate crossfading",
          "lines": "112"
        },
        "current_content": "sample-accurate crossfading (~0.02ms precision)",
        "new_content": "sample-accurate crossfading (~0.02ms precision)\n\nNote: 0.02ms represents sample-level precision at 44.1kHz ([SPEC016 DBD-DEC-080]). For tick-level precision (~35.4 nanoseconds), see [SPEC017 Tick Rate - SRC-TICK-030].",
        "rationale": "Clarify precision claim; 0.02ms is sample precision, not tick precision",
        "status": "READY",
        "references_to_spec016_17": [
          "DBD-DEC-080",
          "SRC-TICK-030"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation-only change"
      },
      {
        "edit_id": "EDIT-SPEC001-003",
        "priority": "MEDIUM",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "Song Boundary Detection",
          "lines": "373"
        },
        "current_content": "[ARCH-SNGC-030] position_event_interval_ms configuration (default 1000ms)",
        "new_content": "[ARCH-SNGC-030] position_event_interval_ms configuration (default 1000ms)\n\nSee [IMPL001 Database Schema - Settings Table](IMPL001-database_schema.md#settings-table) for position_event_interval_ms and playback_progress_interval_ms configuration.",
        "rationale": "Link architecture behavior to database configuration",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation-only change"
      },
      {
        "edit_id": "EDIT-SPEC001-004",
        "priority": "MEDIUM",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "Component Implementation Details",
          "lines": "1177"
        },
        "current_content": "Lists related design specifications",
        "new_content": "Component Implementation Details:\n\n- **Audio Player Architecture**: See [Decoder Buffer Design](SPEC016-decoder_buffer_design.md)\n- **Timing Precision**: See [Sample Rate Conversion](SPEC017-sample_rate_conversion.md)\n- **Crossfade Design**: See [Crossfade Design](SPEC002-crossfade.md)\n- **Single-Stream Playback**: See [Single Stream Playback](SPEC013-single_stream_playback.md), [Single Stream Design](SPEC014-single_stream_design.md)",
        "rationale": "Architecture overview should list SPEC016/SPEC017 as core design specs",
        "status": "READY",
        "references_to_spec016_17": [
          "SPEC016",
          "SPEC017"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation-only change"
      },
      {
        "edit_id": "EDIT-SPEC001-005",
        "priority": "LOW",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "Audio Output",
          "lines": "120"
        },
        "current_content": "cpal for cross-platform audio output",
        "new_content": "cpal for cross-platform audio output\n\nSee [SPEC016 Output](SPEC016-decoder_buffer_design.md#output) for output ring buffer specification:\n- [DBD-OUT-010]: Output ring buffer architecture\n- [DBD-PARAM-030]: 8192 samples (185ms @ 44.1kHz)\n- [DBD-PARAM-040]: 90ms refill period",
        "rationale": "Architecture should reference output system details",
        "status": "READY",
        "references_to_spec016_17": [
          "DBD-OUT-010",
          "DBD-PARAM-030",
          "DBD-PARAM-040"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation-only change"
      },
      {
        "edit_id": "EDIT-SPEC001-006",
        "priority": "LOW",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "Volume Handling",
          "lines": "541"
        },
        "current_content": "[ARCH-VOL-010] Volume scale 0.0-1.0 for all systems",
        "new_content": "[ARCH-VOL-010] Volume scale 0.0-1.0 for all systems\n\nSee [SPEC016 Mixer - DBD-MIX-040] for volume application in mixer (multiply sample values by master volume).",
        "rationale": "Architecture volume spec should reference mixer implementation",
        "status": "READY",
        "references_to_spec016_17": [
          "DBD-MIX-040"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation-only change"
      },
      {
        "edit_id": "EDIT-SPEC001-007",
        "priority": "MEDIUM",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "Internal Components - Audio Player",
          "lines": "844"
        },
        "current_content": "Crossfade Mixer component",
        "new_content": "Crossfade Mixer component (see [SPEC016 Mixer - DBD-MIX-010] through [DBD-MIX-052] for complete specification)",
        "rationale": "Architecture component list should reference detailed spec",
        "status": "READY",
        "references_to_spec016_17": [
          "DBD-MIX-010",
          "DBD-MIX-052"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation-only change"
      }
    ]
  },
  "SPEC016-decoder_buffer_design.md": {
    "document": "SPEC016-decoder_buffer_design.md",
    "tier": 2,
    "total_edits": 15,
    "priority_breakdown": {
      "HIGH": 3,
      "MEDIUM": 8,
      "LOW": 4
    },
    "estimated_line_reduction": 0,
    "summary": "Add missing buffer strategy sections, event integration, and bidirectional references to SPEC013/SPEC014/SPEC002.",
    "edits": [
      {
        "edit_id": "EDIT-SPEC016-001",
        "priority": "CRITICAL",
        "type": "ALIGN_WITH_NEW_DESIGN",
        "location": {
          "section": "New section after Buffers",
          "lines": "After line 219"
        },
        "current_content": "[DBD-BUF-060] ends Buffers section",
        "new_content": "### Buffer Strategies\n\n**[DBD-BUF-070]** Full decode strategy (current/next passages): ENTIRE passage decoded into RAM. This ensures instant playback and seamless crossfades.\n\nApplies to:\n- Currently playing passage (queue position 0)\n- Next-to-play passage (queue position 1)\n\nSee [SPEC014 Full Buffer Strategy - SSD-FBUF-010] for implementation details.\n\n**[DBD-BUF-080]** Partial decode strategy (queued passages): Decode first 15 seconds only (default [DBD-PARAM-070] playout_ringbuffer_size).\n\nApplies to:\n- Queued passages beyond next-to-play (queue positions 2+)\n- Up to maximum_decode_streams total ([DBD-PARAM-050], default 12)\n\nRationale:\n- Optimizes memory usage (don't fully decode entire 30-song queue)\n- Enables instant skip-ahead with partial buffers\n- Decoder continues incrementally filling if passage promoted\n\nSee [SPEC014 Partial Buffer Strategy - SSD-PBUF-010] for implementation details.\n\n**[DBD-BUF-090]** Minimum playback threshold: 3 seconds. Partial buffers must reach minimum threshold before playback can start.\n\nSee [SPEC014 SSD-PBUF-028] for threshold specification.\n\n**[DBD-BUF-100]** Incremental buffer filling: Decoder fills partial buffers in 1-second chunks to prevent blocking.\n\nSee [SPEC014 Incremental Buffer Filling] and [REV004 Fix 2: Partial Buffer Playback].",
        "rationale": "SPEC016 missing critical buffer strategy documentation that exists in SPEC014",
        "status": "READY",
        "references_to_spec016_17": [
          "DBD-PARAM-050",
          "DBD-PARAM-070"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation gap; feature already specified in SPEC014"
      },
      {
        "edit_id": "EDIT-SPEC016-002",
        "priority": "MEDIUM",
        "type": "ALIGN_WITH_NEW_DESIGN",
        "location": {
          "section": "New requirement after DBD-BUF-060",
          "lines": "After line 219"
        },
        "current_content": "[DBD-BUF-060] ends Buffers section",
        "new_content": "### Buffer Events\n\n**[DBD-BUF-110]** Buffer manager emits BufferStateChanged events (see [SPEC011 Event System](SPEC011-event_system.md)) at each state transition:\n\n- **None \u2192 Decoding**: When decoder starts filling buffer\n- **Decoding \u2192 Ready**: When decode completes (full buffer) or reaches minimum threshold (partial buffer)\n- **Ready \u2192 Playing**: When mixer starts reading from buffer\n- **Playing \u2192 Exhausted**: When position reaches total_frames\n\nSee [SPEC014 Buffer Lifecycle - SSD-BUF-020] for state machine details.",
        "rationale": "Event integration critical for UI updates and debugging; specified in SPEC011/SPEC014",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "NONE",
        "implementation_notes": "Event system already specified elsewhere; SPEC016 needs cross-reference"
      },
      {
        "edit_id": "EDIT-SPEC016-003",
        "priority": "MEDIUM",
        "type": "CLARIFY_PARAMETER",
        "location": {
          "section": "DBD-PARAM-050",
          "lines": "104-107"
        },
        "current_content": "[DBD-PARAM-050] maximum_decode_streams determines the maximum number of audio decoders that will operate on passages in the queue. Default value: 12.",
        "new_content": "[DBD-PARAM-050] maximum_decode_streams determines how many decoder-buffer chains can exist simultaneously (default: 12). This controls buffer allocation (memory limit).\n\nNote: Actual decoder execution uses serial decode per [DBD-DEC-040] (one decoder at a time). This parameter limits the number of buffers allocated, not concurrent execution threads.\n\nRelated: [SPEC014 SSD-DEC-030] describes original 2-thread pool design; serial decode is the improved approach.",
        "rationale": "Clarify that maximum_decode_streams is buffer allocation limit, not thread count",
        "status": "READY",
        "references_to_spec016_17": [
          "DBD-DEC-040"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Terminology clarification; no functional change"
      },
      {
        "edit_id": "EDIT-SPEC016-004",
        "priority": "MEDIUM",
        "type": "ALIGN_WITH_NEW_DESIGN",
        "location": {
          "section": "DBD-PARAM-060",
          "lines": "111-117"
        },
        "current_content": "[DBD-PARAM-060] decode_work_period: The number of wall clock milliseconds between decode job priority evaluation. Default value: 5000ms.",
        "new_content": "[DBD-PARAM-060] **ALTERNATIVE DESIGN:** Priority queue with continuous processing.\n\nOriginal design: Time-based switching every 5 seconds (decode_work_period).\n\nImproved design: Decoder processes priority queue continuously. When current decode job completes or buffer fills, immediately dequeue next highest-priority job. See [SPEC014 SSD-DEC-032] for priority queue implementation.\n\nBenefits:\n- Simpler scheduling logic (no timers)\n- Decoder completes current job before switching\n- Priority enforced at job boundaries, not arbitrary time intervals\n- Immediate response to priority changes when current decode finishes",
        "rationale": "SPEC014 priority queue approach simpler than time-based switching",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "MINOR",
        "implementation_notes": "Need to verify which approach is implemented"
      },
      {
        "edit_id": "EDIT-SPEC016-005",
        "priority": "LOW",
        "type": "ADD_CLARIFICATION",
        "location": {
          "section": "DBD-OV-040",
          "lines": "After line 58"
        },
        "current_content": "Logical processing pipeline diagram",
        "new_content": "Logical processing pipeline diagram\n\nNote: This diagram shows logical processing stages. In the implemented architecture (see [SPEC014 Single Stream Design](SPEC014-single_stream_design.md)), Decoder, Resampler, and Fade Handler are all performed within DecoderPool worker threads. See [SPEC013 Single Stream Playback](SPEC013-single_stream_playback.md) and [SPEC014](SPEC014-single_stream_design.md) for component-level architecture.",
        "rationale": "Clarify logical vs physical architecture views",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation clarification; both views valid at different levels"
      },
      {
        "edit_id": "EDIT-SPEC016-006",
        "priority": "MEDIUM",
        "type": "ALIGN_WITH_NEW_DESIGN",
        "location": {
          "section": "DBD-BUF-060",
          "lines": "219"
        },
        "current_content": "[DBD-BUF-060] When mixer position reaches end time, buffer is exhausted and informs queue",
        "new_content": "[DBD-BUF-060] When mixer position reaches total_frames (set when decoder marks buffer as complete), buffer is exhausted and informs queue.\n\nThis sentinel-based approach prevents race conditions with incremental buffer filling. See [SPEC015 Playback Completion Fixes - PCF-COMP-010] for race condition fix using explicit decode_complete flag + total_frames field.",
        "rationale": "SPEC015 documents fix for buffer completion race condition",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "NONE",
        "implementation_notes": "SPEC015 already documents the fix; SPEC016 just needs to reference it"
      },
      {
        "edit_id": "EDIT-SPEC016-007",
        "priority": "LOW",
        "type": "ADD_GLOSSARY",
        "location": {
          "section": "After Overview section",
          "lines": "After line 67"
        },
        "current_content": "End of Overview section",
        "new_content": "### Terminology\n\n**Decoder-buffer chain** (design concept) = **PassageBuffer** (core data structure) wrapped in **ManagedBuffer** (lifecycle management).\n\nSee [SPEC013 Single Stream Playback](SPEC013-single_stream_playback.md) and [REV004 Incremental Buffer Implementation](REV004-incremental_buffer_implementation.md) for implementation details.",
        "rationale": "Eliminate terminology confusion between design and implementation",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "NONE",
        "implementation_notes": "Simple cross-reference"
      },
      {
        "edit_id": "EDIT-SPEC016-008",
        "priority": "LOW",
        "type": "ADD_CROSS_REFERENCE",
        "location": {
          "section": "DBD-PARAM-010",
          "lines": "After line 78"
        },
        "current_content": "Operating Parameters section begins",
        "new_content": "Operating Parameters\n\nSee [IMPL001 Database Schema - Settings Table](IMPL001-database_schema.md#settings) for database storage of operating parameters.\n\nNote: This section lists decode/buffer-related parameters only. IMPL001 settings table includes additional configuration (volume_level, audio_sink, event intervals, etc.).",
        "rationale": "Cross-reference database storage; acknowledge SPEC016 doesn't list all settings",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "NONE",
        "implementation_notes": "Simple cross-reference"
      },
      {
        "edit_id": "EDIT-SPEC016-009",
        "priority": "LOW",
        "type": "CLARIFY_BEHAVIOR",
        "location": {
          "section": "DBD-MIX-020",
          "lines": "225"
        },
        "current_content": "[DBD-MIX-020] Mixer periodically refills output ring buffer",
        "new_content": "[DBD-MIX-020] Mixer thread wakes approximately every output_refill_period ([DBD-PARAM-040], default 90ms) to check output ring buffer fill level and refill as needed.\n\nRing buffer uses lock-free atomic operations for continuous audio callback access. See [SPEC013 Lock-Free Ring Buffer - SSP-OUT-050].",
        "rationale": "Clarify periodic wake vs blocking timer; emphasize lock-free operation",
        "status": "READY",
        "references_to_spec016_17": [
          "DBD-PARAM-040"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Clarification only"
      },
      {
        "edit_id": "EDIT-SPEC016-010",
        "priority": "MEDIUM",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "Related Documents - DBD-REL-010",
          "lines": "71"
        },
        "current_content": "> **Related Documents:** [SPEC002 Crossfade Design](SPEC002-crossfade.md) | [REQ002 Entity Definitions](REQ002-entity_definitions.md) | [SPEC017 Sample Rate Conversion](SPEC017-sample_rate_conversion.md)",
        "new_content": "> **Related Documents:** [SPEC002 Crossfade Design](SPEC002-crossfade.md) | [REQ002 Entity Definitions](REQ002-entity_definitions.md) | [SPEC017 Sample Rate Conversion](SPEC017-sample_rate_conversion.md) | [SPEC013 Single Stream Playback](SPEC013-single_stream_playback.md) | [SPEC014 Single Stream Design](SPEC014-single_stream_design.md) | [SPEC015 Playback Completion Fixes](SPEC015-playback_completion_fixes.md)",
        "rationale": "SPEC016 should acknowledge SPEC013/SPEC014 overlap; bidirectional references",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "NONE",
        "implementation_notes": "Bidirectional cross-reference"
      },
      {
        "edit_id": "EDIT-SPEC016-011",
        "priority": "MEDIUM",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "DBD-FADE-010",
          "lines": "195"
        },
        "current_content": "Fade In/Out handler applies fade curves",
        "new_content": "Fade In/Out handler applies fade curves\n\nSee [SPEC002 Volume Fade Curve Formulas](SPEC002-crossfade.md#volume-fade-curve-formulas) for fade curve implementations:\n- [XFD-IMPL-091]: Linear fade\n- [XFD-IMPL-092]: Exponential fade-in\n- [XFD-IMPL-093]: Logarithmic fade-out\n- [XFD-IMPL-094]: Cosine fade\n- [XFD-IMPL-095]: Equal-power crossfade\n\nSPEC016 applies curves before buffering (pre-buffer); SPEC002 defines curve formulas.",
        "rationale": "SPEC016 applies fade curves; SPEC002 defines them - bidirectional reference",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "NONE",
        "implementation_notes": "Bidirectional cross-reference to SPEC002"
      },
      {
        "edit_id": "EDIT-SPEC016-012",
        "priority": "MEDIUM",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "DBD-MIX-040",
          "lines": "After mixer algorithm description"
        },
        "current_content": "Mixer implementation description",
        "new_content": "Mixer implementation description\n\nFor crossfade timing calculation (WHEN crossfades occur), see [SPEC002 Crossfade Design - Implementation Algorithm](SPEC002-crossfade.md#implementation-algorithm) ([XFD-IMPL-010] through [XFD-IMPL-050]).\n\nSPEC016 defines HOW mixer implements crossfade overlap; SPEC002 defines WHEN overlap occurs.",
        "rationale": "Bidirectional reference: SPEC016 implements mixing, SPEC002 defines timing",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "NONE",
        "implementation_notes": "Bidirectional cross-reference to SPEC002"
      },
      {
        "edit_id": "EDIT-SPEC016-013",
        "priority": "LOW",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "DBD-FMT-010",
          "lines": "246"
        },
        "current_content": "Stereo f32 sample format",
        "new_content": "Stereo f32 sample format (interleaved: [L, R, L, R, ...])\n\nSee [SPEC013 Decoding Flow - SSP-DEC-040](SPEC013-single_stream_playback.md#core-components) for interleaved stereo f32 format description.",
        "rationale": "Cross-reference sample format between SPEC016 and SPEC013",
        "status": "READY",
        "references_to_spec016_17": [],
        "implementation_impact": "NONE",
        "implementation_notes": "Bidirectional cross-reference"
      }
    ]
  },
  "SPEC017-sample_rate_conversion.md": {
    "document": "SPEC017-sample_rate_conversion.md",
    "tier": 2,
    "total_edits": 5,
    "priority_breakdown": {
      "HIGH": 1,
      "MEDIUM": 3,
      "LOW": 1
    },
    "estimated_line_reduction": 0,
    "summary": "Add related documentation section and bidirectional references.",
    "edits": [
      {
        "edit_id": "EDIT-SPEC017-001",
        "priority": "MEDIUM",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "Related Documentation",
          "lines": "7"
        },
        "current_content": "(Currently no related documentation section)",
        "new_content": "> **Related Documentation:** [Crossfade Design](SPEC002-crossfade.md) | [Decoder Buffer Design](SPEC016-decoder_buffer_design.md) | [Database Schema](IMPL001-database_schema.md) | [Architecture](SPEC001-architecture.md)",
        "rationale": "SPEC017 needs related documentation section for tick system usage",
        "status": "READY",
        "references_to_spec016_17": [
          "SPEC016"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation-only change"
      },
      {
        "edit_id": "EDIT-SPEC017-002",
        "priority": "MEDIUM",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "SRC-COEX-020",
          "lines": "228"
        },
        "current_content": "Discusses tick-to-sample conversion at decoder-buffer boundary",
        "new_content": "Tick-to-sample conversion at decoder-buffer boundary\n\nSee [SPEC016 Fade In/Out handlers](SPEC016-decoder_buffer_design.md#fade-inout-handlers) for implementation of tick-to-sample conversion:\n- [DBD-FADE-010]: Fade handler receives timing in ticks\n- [DBD-FADE-020]: Converts to sample counts at working_sample_rate\n- [DBD-FADE-030]: Applies fade curves during decode (pre-buffer)\n\nSPEC017 describes conversion point; SPEC016 implements it.",
        "rationale": "Link tick conversion to SPEC016 implementation point",
        "status": "READY",
        "references_to_spec016_17": [
          "DBD-FADE-010",
          "DBD-FADE-020",
          "DBD-FADE-030"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Bidirectional cross-reference"
      },
      {
        "edit_id": "EDIT-SPEC017-003",
        "priority": "LOW",
        "type": "ADD_REFERENCE",
        "location": {
          "section": "Working Sample Rate",
          "lines": "194-210"
        },
        "current_content": "WKMP defines a working_sample_rate for internal mixing operations ([DBD-PARAM-020] default: 44,100 Hz).",
        "new_content": "WKMP defines a working_sample_rate for internal mixing operations ([SPEC016 DBD-PARAM-020](SPEC016-decoder_buffer_design.md#operating-parameters), default: 44,100 Hz).\n\nSee [SPEC016 Resampling - DBD-RSMP-010] for resampling behavior when file sample rate != working_sample_rate.",
        "rationale": "Link to authoritative working_sample_rate definition and resampling behavior",
        "status": "READY",
        "references_to_spec016_17": [
          "DBD-PARAM-020",
          "DBD-RSMP-010"
        ],
        "implementation_impact": "NONE",
        "implementation_notes": "Documentation-only change"
      }
    ]
  }
}